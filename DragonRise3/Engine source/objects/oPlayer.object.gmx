<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBodyCanvasHumanWalk1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise

sprLight = sBasicLight;
sprLightIndex = 0;
scale = 2;
color = c_white;
sprAlpha = 0.5;
rot = 0;

ini_open("config.cfg");
testKey = ini_read_real("keybinding", "move_right", 68);
ini_close();

set_sprite(sprite_index,0);
instance_create(x,y,oPlayerCombat);
instance_create(x,y,oState);
instance_create(x,y,oHUD);
instance_create(x,y,oOptimize);
instance_create(x,y,oMinimap);
instance_create(x,y,oDayNight);

Sname = part_system_create();

//surface = surface_create(room_width,room_height);
//surface_set_target(surface);
//draw_clear_alpha(c_white,0);
//surface_reset_target();

z = 0;
blur = 0;
load = 1;
dir = ""; 
h1 = 0;
rychlost = 3.5; 
can_move = 1;
can_move2 = 1;
can_move3 = 1;
can_move4 = 1;
can_move5 = 1;
a1 = 0;
last_dir = "s";
cyber_r = 0;
attack_interval = 40;
m1 = 0;
m2 = 0;
can_damage = -1;
tempN = 0;
text = "";
parrySlowdown = 100;
temp_rychlost = rychlost;
slowdown = 0;

equ_draw_head         = 1;
equ_draw_left_plate   = 1;
egu_draw_right_plate  = 1;
equ_draw_body         = 1;
equ_draw_right_hand   = 1;
equ_draw_left_hand    = 1;
equ_draw_left_ring1   = 1;
equ_draw_left_ring2   = 1;
equ_draw_right_ring1  = 1;
equ_draw_right_ring2  = 1;
equ_draw_crown        = 1;
equ_draw_trophy1      = 1;
equ_draw_trophy2      = 1;
equ_draw_trophy3      = 1;
equ_draw_special1     = 1;
equ_draw_special2     = 1;
equ_draw_belt         = 1;
equ_draw_left_boot    = 1;
equ_draw_right_boot   = 1;

gold                  = 0;                                  // I am really not sure, but gold shouldn´t be item, right? 

for(a = 0; a &lt; celkem_vlastnosti; a++)
{
 vlastnost[a] = 0;
 draw_equ[a,0] = 0;
  draw_equ[a,1] = 0;

}

for(a = 0; a &lt; spell_total; a++)
{
 magic[spell_total] = 0;
}
vlastnost[vlastnost_max_zivot] = 40;
vlastnost[vlastnost_zivot] = 40;
vlastnost[vlastnost_max_stit] = 10;
vlastnost[vlastnost_stit] = 10;
vlastnost[vlastnost_max_stamina] = 15;
vlastnost[vlastnost_stamina] = 15;
vlastnost[vlastnost_max_mana] = 50;
vlastnost[vlastnost_mana] = 50;
vlastnost[vlastnost_max_zkusenosti] = 100;
vlastnost[vlastnost_level] = 1;


last_hp = vlastnost[vlastnost_zivot];
last_stit = vlastnost[vlastnost_stit];
last_stamina = vlastnost[vlastnost_stamina];
last_mana = vlastnost[vlastnost_mana];
last_xp = 0;

vlastnost[vlastnost_kriticka_sance] = 50;
vlastnost[vlastnost_kriticka_nasobic] = 2;

vlastnost[vlastnost_tick_stamina] = 50;
vlastnost[vlastnost_tick_stamina_add] = 1;

stamina_tick = vlastnost[vlastnost_tick_stamina]; 

sprinting = 0;
magic_repeat = 0;
magic_timer = 1;
magic_id = "";

spell[0] = "";
spell[1] = "";
spell[2] = "";
spell_cd[0] = 0;
spell_cd[1] = 0;
spell_cd[2] = 0;
temp_cd[0] = 1;
temp_cd[1] = 1;
temp_cd[2] = 1;
spell_sprite[0] = sFreeSlot;
spell_sprite[1] = sFreeSlot;
spell_sprite[2] = sFreeSlot;

spell[0] = "flash";
spell_sprite[0] = sSpellFlash;
spell[1] = "frozen_bolts";
spell_sprite[1] = sSpellFrozenBolts;
spell[2] = "fire_trail";
spell_sprite[2] = sSpellFireBeam;

spell_index = -1;


magic[spell_fireball_cost] = 20;
magic[spell_fireball_damage] = 15;
magic[spell_fireball_cooldown] = 80;

magic[spell_frozen_bolts_cost] = 25;
magic[spell_frozen_bolts_damage] = 8;
magic[spell_frozen_bolts_cooldown] = 220;   
magic[spell_frozen_bolts_number] = 5;

magic[spell_fire_trail_damage] = 0.8;
magic[spell_fire_trail_cost] = 4;

magic[spell_flash_cost] = 8;
magic[spell_flash_cooldown] = 60;

magic[spell_vines_cost] = 15;
magic[spell_vines_cooldown] = 240;
magic[spell_vines_damage] = 5;


skillPoints    = 10;
propertyPoints = 5;
talentPoints   = 10;
spellPoints    = 20;
 
statusList        = ds_list_create();
statusTimeList    = ds_list_create();
statusSpriteList  = ds_list_create();
statusScaleList   = ds_list_create();
statusAlphaList   = ds_list_create();
statusMTimeList   = ds_list_create();
statusColorList   = ds_list_create();
statusNList       = ds_list_create();

testStatus = 0;

time = 0;
currentAnimation = animationEnum.walk;
bci[5, 16] = 0;

scrBodyCanvasDB();
scrBodyCanvasIni(animationEnum.walk, sBodyCanvasHumanWalk1, sBodyCanvasArmor1, sBodyCanvasHood1, sBodyCanvasBelt1, sBodyCanvasLegs1, sBodyCanvasShoes1, sBodyCanvasHands1, 0);
scrBodyCanvasIni(animationEnum.slash, sBodyCanvasAttack1, sBodyCanvasAttackArmor1, sBodyCanvasAttackHead1, sBodyCanvasAttackBelt1, sBodyCanvasAttackLegs1, sBodyCanvasAttackShoes1, sBodyCanvasAttackHands1, 0);

speechQueue = ds_queue_create();
speechAlpha = 0;
speechIn    = false;
speechCurrentText = "";
speechMode  = 0;
speechSkip = false;

rankName[1] = "cizinec";
rankName[2] = "návštěvník";
rankName[3] = "neznámý cestovatel";
rankName[4] = "bezejmenný kupec";
rankName[5] = "stálý návštěvník";
rankName[6] = "povědomá tvář";
rankName[7] = "známý poutník";
rankName[8] = "vzácný host";
rankName[9] = "přítel města";
rankName[10] = "zmocněnec královského písaře";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free PSystem

part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Timeline spells DB

randomize();

if (magic_repeat &gt; 0) {magic_repeat--; alarm[1] = magic_timer + random(3);} else {can_move3 = 1;}

if (magic_id = "frozen_bolt")
   {
      i = instance_create(x,y,oBasicSpell); 
      i.type = "frozen_bolt";
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle stacionary movement

apiPlayerMoveStand();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle movement

//scrWeatherRainSpawn();


if (load &gt; 0) {load -- } else {load = -1; event_user(0);}
apiPlayerMove();
temp_rychlost = ((rychlost / 100) * parrySlowdown) * (1 - slowdown);    
time+=0.02;;

     with(oGoblin) {event_user(15);}
    
cyber_r ++;
//surface_set_target(surface);
//draw_circle(x,y,cyber_r,0);

// test
if (keyboard_check_pressed(vk_numpad7))
    {
     game_save("myFile.dat");
     with(oHUD)
        {
         tempStr = ds_list_write(craftingKnownItems);
         file = file_text_open_write("saveData.txt");
         file_text_write_string(file, tempStr);
         file_text_writeln(file);
         file_text_close(file);
        }
     
    }
if (keyboard_check_pressed(vk_numpad8))
    {
     game_load("myFile.dat");
     with(oHUD)
        {
         file = file_text_open_read("saveData.txt");
         tempStr = file_text_readln(file);
         ds_list_read(craftingKnownItems, tempStr);
         file_text_close(file);
        }
    }
//surface_reset_target();
if (can_move2)
{
   
if (keyboard_check(ord("J")))
   {
    if (spell[0] != "") {spell_index = 0; event_user(2);}
    
   }
if (keyboard_check(ord("K")))
   {
    if (spell[1] != "") {spell_index = 1; event_user(2);}
    
   }
if (keyboard_check(ord("L")))
   {
    if (spell[2] != "") {spell_index = 2; event_user(2);}
    
   }

}

if (vlastnost[vlastnost_zkusenosti] &gt; vlastnost[vlastnost_max_zkusenosti]) 
   {
   event_user(1);
   
   }

   
  for (a = 0; a &lt; 3; a++)
        {
         if (spell_cd[a] &gt; 0) {spell_cd[a]--;}
        }

        
        if (keyboard_check_pressed(ord("V")))
           {
           inventoryExtend(8);
           }
           
if (keyboard_check_pressed(vk_escape))
   {
    scrPauseGame();
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TEST

/***************************************************
    Příklad cutscény
***************************************************/

/*
var ins1, ins2;
ins1 = instance_create(x-100, y+100, oTestNpc2); ins1.name = "První objekt";
ins2 = instance_create(x+100, y+100, oTestObject); ins2.name = "Druhý objekt";

scrCutscenePlay(ins1, DemoCutscene, false, 1);
*/

//scrHintShow("LoF", "Vítej v " +scrColorflag(c_aqua) + "Simplexu" + scrEndColorflag() + " ", "Ok");

//apiPlayerSay("Ahoj. :-)");
//apiPlayerSay("Bavíš se?");
oHUD.draw = !oHUD.draw

with(oHUD)
    {
     craftingItemsSprite[0, 4] = 7; 
    scrCraftingSetItemKnown(4, "Dřevo", "Poškození: " + scrColorflag(c_lime) + "5" + scrEndColorflag() + " - " + scrColorflag(c_lime) + "8#" + scrEndColorflag() + "Stamina na úder: " + scrColorflag(c_red) + "4 " + scrEndColorflag() + "- " + scrColorflag(c_red) + "5#");
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spells DB

if (spell[spell_index] == "fireball")
   {
    if (vlastnost[vlastnost_mana] &gt;= magic[spell_fireball_cost] &amp;&amp; spell_cd[spell_index] = 0) {spell_cd[spell_index] = magic[spell_fireball_cooldown]; temp_cd[spell_index] = spell_cd[spell_index]; vlastnost[vlastnost_mana] -= magic[spell_fireball_cost]; i = instance_create(x,y,oBasicSpell); i.type = "fireball";}
   }
if (spell[spell_index] == "frozen_bolts")
   {
    if (vlastnost[vlastnost_mana] &gt;= magic[spell_frozen_bolts_cost] &amp;&amp; spell_cd[spell_index] = 0) {spell_cd[spell_index] = magic[spell_frozen_bolts_cooldown]; temp_cd[spell_index] = spell_cd[spell_index]; vlastnost[vlastnost_mana] -= magic[spell_frozen_bolts_cost]; magic_repeat = magic[spell_frozen_bolts_number]; i = instance_create(x,y,oBasicSpell); i.type = "frozen_bolt"; alarm[1] = random_range(5,8); magic_timer = random_range(2,4); magic_id = "frozen_bolt"; can_move3 = 0; speed = 0; image_speed = 0;}
   }
if (spell[spell_index] == "fire_trail")
   {
    if (vlastnost[vlastnost_mana] &gt;= magic[spell_fire_trail_cost] &amp;&amp; spell_cd[spell_index] = 0) {if (instance_number(oLenghdirSpell) = 0 &amp;&amp; (dir != "" || last_dir != "")) {i = instance_create(x,y,oLenghdirSpell); i.dir = last_dir; i.type = "fire_trail"; i.index = spell_index; can_move3 = 0; speed = 0; image_speed = 0; vlastnost[vlastnost_mana] -= magic[spell_fire_trail_cost];} else {if (oLenghdirSpell.alarm[1] &lt; 2) {vlastnost[vlastnost_mana] -= magic[spell_fire_trail_cost]; oLenghdirSpell.alarm[1] = 20;} }   }
   }
if (spell[spell_index] == "flash")
   {
    if (vlastnost[vlastnost_mana] &gt;= magic[spell_flash_cost] &amp;&amp; spell_cd[spell_index] = 0) {spell_cd[spell_index] = magic[spell_flash_cooldown]; temp_cd[spell_index] = spell_cd[spell_index]; vlastnost[vlastnost_mana] -= magic[spell_flash_cost]; tempI = 0; if (last_dir = "d") {repeat(96/8) {effectShodowPort(x + tempI, y, 1); tempI += 8;} x += 96;} if (last_dir = "a") {repeat(96/8) {effectShodowPort(x - tempI, y, 1); tempI += 8;} x -= 96;} if (last_dir = "w") {repeat(96/8) {effectShodowPort(x, y - tempI, 1); tempI += 8;} y -= 96;} if (last_dir = "s") {repeat(96/8) {effectShodowPort(x, y + tempI, 1); tempI += 8;} y += 96;} scrEnemyApplyAffect("flash", 120, 1, c_lime, 1, 100, true, false, false);  }
   }
if (spell[spell_index] == "vines")
   {
    if (vlastnost[vlastnost_mana] &gt;= magic[spell_vines_cost] &amp;&amp; spell_cd[spell_index] = 0) {spell_cd[spell_index] = magic[spell_vines_cooldown]; temp_cd[spell_index] = spell_cd[spell_index]; vlastnost[vlastnost_mana] -= magic[spell_vines_cost]; tempI = 0; i = instance_create(x,y,oBasicSpell); i.type = "vines";}
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level up

vlastnost[vlastnost_max_zkusenosti] = round(vlastnost[vlastnost_zkusenosti]+log2(vlastnost[vlastnost_zkusenosti])+vlastnost[vlastnost_zkusenosti]/3);
vlastnost[vlastnost_zkusenosti] = 0;
last_xp = 0;
vlastnost[vlastnost_level]++; 
skillPoints++;
talentPoints++;

inst = instance_create(view_xview, view_yview, oAchievement);
inst.header = "Úroveň " + string(vlastnost[vlastnost_level]) + " dosažena!";
inst.text = "Nyní jsi znám jako " + scrColorflag(c_yellow) + apiPlayerGetRankName() + scrEndColorflag()+ ".";
inst.index = 0;
inst.medalType = 2;

audio_play_sound(sndSoundLevelUp, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle building

if (instance_number(oFence) &gt; 0)
    {
     fenceFound  = false;
     maxAttempts = instance_number(oFence);
     attempts    = 0;
     iB = instance_nearest(x, y, oFence);
     iD = distance_to_object(iB);     
     
     if (iD &lt; 15 &amp;&amp; iD &gt; 0)
     {
     while(!fenceFound &amp;&amp; (attempts &lt; maxAttempts))
     {
      iB = instance_nnearest(x, y, oFence, attempts);
      iD = distance_to_object(iB);
      
      if (!iB.built) {fenceFound = true;}
      attempts++;
     }
     
     if (iD &lt; 15 &amp;&amp; iD &gt; 0)
        {
         iB.drawText = true;
        }
     }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw player

apiPlayerDraw();

/* 
draw_text(x, y - 32, text);

clr(c_black, 0.5);
draw_ring_part(x, y, 64, 6, 128, 128, 0, 360, true, c_black, false);
clr()
draw_ring_part(x, y, 64, 6, 128, 128, 90, 360 * (last_hp / vlastnost[vlastnost_max_zivot]), true, c_red, true);
draw_ring_part(x, y, 64, 1, 128, 128, 90, 360 * (last_hp / vlastnost[vlastnost_max_zivot]), true, c_black, false);
draw_ring_part(x, y, 64+6, 1, 128, 128, 90, 360 * (last_hp / vlastnost[vlastnost_max_zivot]), true, c_black, false);
*/

/*
queue = ds_queue_create(); 
list  = ds_list_create(); // Visited places + number [(1,1),5] --&gt; [(x,y)n]
relativeX = x - 16;
relativeY = y - 16;
gridSize  = 32;
i= 0;
listI = 1;
scrTest1();

ds_queue_destroy(queue);
ds_list_destroy(list);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
