<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMessagebox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-210</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up

image_speed = 0;

for(a = 0; a &lt; dialogue_lenght; a++) {message_head[a] = ""; message_text[a] = ""; message_head[a] = ""; message_image[a] = -1;}

alarm[0] = 1;          
message_number  = 0;
message_current = 0;
break_on_index  = -1;
pos             = 1;
type_speed      = 0.5;
ret_str         = "";
f               = 0;
draw            = 1;
idd             = 0;
c               = 0;
done            = 0;
effect          = "fadeIn";
ta              = 0;


for(a=0; a&lt;20; a++)
         {
          option[a] = -1;
         }

inv_state = oInventory.draw_inventory;
oPlayer.can_move2 = 0;

alpha     = 1;
bac_alpha = 0;

if (instance_number(parNPC) &gt; 0)
   {
    parNPC.talking = 1;   
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset variables

oInventory.draw_inventory = inv_state;
oPlayer.can_move2         = 1;

if (!oInventory.draw_inventory) {oInventory.draw = 1;}

if (instance_number(parNPC) &gt; 0)
   {
    parNPC.talking = 0;
   }
oCamera.target = oPlayer;      
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>oCamera.target = (parent);   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle dialogue

if (option[message_current] = -1)
   {
     if (message_text[message_current+1] = "") {draw = 0; effect = "nothing"; ta = 0;}
   else 
        {
          if (pos &gt;= string_length(message_text[message_current]))
          { 
        // pos = 1;
        // message_current++; 
        effect = "fadeInOnly";
        ta = 0;
         }       
        }
     }
     else 
          {
           // show_message(message_current+string(" ")+string(oMessagebox.option[oMessagebox.message_current]));
           an = instance_create(view_xview+350,view_yview+320,oAnswer);
           an.parent = (parent);
           with((parent)) 
           {
           action_id = oMessagebox.option[oMessagebox.message_current]; 
           event_user(14);
           }
           effect = "nothing";
           ta = 0;
           
          }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw dialogue

x = view_xview+5;
y = view_yview-10;
scrSetActiveTempComponent(true);

if (effect == "fadeOut") {if (ta &gt; 0) {ta -= 0.05;} else {ta = 0; pos = 1; message_current++; effect = "fadeIn";}}
if (effect == "fadeIn") {if (ta &lt; 1) {ta += 0.05;} else {ta = 1; effect = "false";}}
if (effect == "fadeInOnly") {if (ta &gt; 0) {ta -= 0.05;} else {ta = 1; pos = 1; message_current++; effect = "false";}}
if (effect == "fadeInOnlyNoNext") {if (ta &lt; 1) {ta += 0.05;} else {ta = 1; effect = "false";}}

if (instance_number(oInventory) &gt; 0) {oInventory.draw_inventory = 0; oInventory.draw_equipment = false;}

if (bac_alpha &lt; 0.3 &amp;&amp; draw) {bac_alpha += 0.01;}
clr(c_black,bac_alpha);
draw_rectangle_colour(view_xview,view_yview,view_xview+1024,view_yview+768,c_black,c_black,c_black,c_black,0);
clr();

draw_self();
draw_sprite_ext(sprite_index,1,x,y,1,1,0,c_white,image_alpha);
if (message_image[message_current] != -1) {draw_sprite_ext(sPortraits,message_image[message_current],x,y+32,1,1,0,c_white,image_alpha); }


dialogueTypewriter();                                     
if (!draw) {if (image_alpha &gt; 0) {image_alpha -= 0.05;} else {instance_destroy();} if (image_alpha &lt;= 0.3) {bac_alpha -= 0.05;}}


draw_set_font(fntPixel);
scrCenterText();
clr(c_white, min(ta * 2, 1));
draw_text(x+230,y+25,message_head[message_current]);
scrCenterText(0);
clr(c_white, ta);
draw_text_colored(x+150,y+40,str);

if (mouse_check_button_pressed(mb_left) &amp;&amp; draw &amp;&amp; instance_number(oAnswer) == 0) 
   {
   if (option[message_current] = -1)
   {
     if (message_text[message_current+1] = "") {draw = 0;}
   else 
        {
          if (pos &gt;= string_length(message_text[message_current]))
          { 
          if (effect == "false") {effect = "fadeOut";}
     
         } 
         else
         {

         }      
        }
     }
     else 
          {
           // show_message(message_current+string(" ")+string(oMessagebox.option[oMessagebox.message_current]));
          }
   }
if (mouse_check_button_pressed(mb_left) &amp;&amp; draw)
    {
     pos = string_length(message_text[message_current]);
    }
    
if (draw &amp;&amp; instance_number(oAnswer) == 0)
   {
    if (option[message_current] != -1)
     {
      an = instance_create(view_xview+350,view_yview+320,oAnswer);
           an.parent = (parent);
           with((parent)) {action_id = oMessagebox.option[oMessagebox.message_current]; event_user(14);}

     }
   
   }   
   


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
